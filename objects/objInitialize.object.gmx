<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_size(display_get_width(),display_get_height());
//window_set_size(display_get_width(),display_get_width()*9/16);

display_reset(0,true);





globalvar gameSteps;

globalvar grav;
globalvar bowSpeed;
globalvar arrowSpeed;
globalvar arrowDamage;
globalvar numArchers;
globalvar multiShot;
globalvar fireUpgrade,frostUpgrade,lightningUpgrade;
globalvar frostFireUpgrade, frostFireLightningUpgrade;
globalvar fireDamageMult,frostDamageMult,lightningDamageMult;
globalvar baseFireMult,baseFrostMult,baseLightningMult;
globalvar currentArrow;

globalvar day;
globalvar gold;
globalvar oldGold;
globalvar waveDelay;
globalvar currentWave;
globalvar gateHP;
globalvar currentWave, numWaves;


globalvar baseEnemySpeed;
globalvar baseBowSpeed;

globalvar burnDuration;
globalvar chillDuration;
globalvar maxLightningJumps;
globalvar maxArcDistance;


globalvar HPScaling;
globalvar goldScaling;

globalvar endlessUnlocked;
globalvar endlessMode;
globalvar endlessHPScaling;
globalvar endlessGoldScaling;


baseBowSpeed = .125;

bowSpeed = baseBowSpeed;
arrowSpeed = 18;
arrowDamage = 1;
numArchers = 1;
multiShot = 1;
fireUpgrade = false;
frostUpgrade = false;
lightningUpgrade = false;
frostFireUpgrade = false;
frostFireLightningUpgrade = false;
baseFireMult = .5;
baseFrostMult = .5;
baseLightningMult = .5;
fireDamageMult = baseFireMult;
frostDamageMult = baseFrostMult;
lightningDamageMult = baseLightningMult;
burnDuration = 600;
chillDuration = 300;
maxLightningJumps = 4;
maxArcDistance = 256;
currentArrow = objArrow;

day = 1;
gold = 0;//10000;
oldGold = 0;
waveDelay = 1200;
currentWave = 0;
gateHP = 100;
currentWave = 0;
numWaves = 0;

baseEnemySpeed = -1;
grav = 0.22;
gameSteps = 0;



HPScaling = 8;
goldScaling = 2;

endlessUnlocked = true;
endlessMode = false;
endlessHPScaling = 3;
endlessGoldScaling = 1.5;

//////////////////Multiplayer Variables/////////////////
globalvar hosting;
hosting = false;
globalvar buffCount;
buffCount = 0;
globalvar playerBuffCount;
playerBuffCount = 0;
globalvar multiplayerMode;
multiplayerMode = false;


globalvar mReady;
mReady[0] = false;
mReady[1] = false;
mReady[2] = false;
mReady[3] = false;
globalvar mx;
mx[0] = 0;
mx[1] = 0;
mx[2] = 0;
mx[3] = 0;
globalvar my;
my[0] = 0;
my[1] = 0;
my[2] = 0;
my[3] = 0;
globalvar mClicked;
mClicked[0] = 0;
mClicked[1] = 0;
mClicked[2] = 0;
mClicked[3] = 0;

globalvar multiplayerGold;
multiplayerGold = 0;
globalvar mNewGold;
mNewGold[0] = 0;
mNewGold[1] = 0;
mNewGold[2] = 0;
mNewGold[3] = 0;

/*globalvar mQPress;
mQPress[0] = 0;
mQPress[1] = 0;
mQPress[2] = 0;
mQPress[3] = 0;
globalvar mWPress;
mWPress[0] = 0;
mWPress[1] = 0;
mWPress[2] = 0;
mWPress[3] = 0;
globalvar mEPress;
mEPress[0] = 0;
mEPress[1] = 0;
mEPress[2] = 0;
mEPress[3] = 0;
globalvar mRPress;
mRPress[0] = 0;
mRPress[1] = 0;
mRPress[2] = 0;
mRPress[3] = 0;*/
globalvar currArrow;
currArrow[0] = objArrow;
currArrow[1] = objArrow;
currArrow[2] = objArrow;
currArrow[3] = objArrow;
globalvar mDamageTotal;
mDamageTotal = 0;
globalvar mDamageDealt;
mDamageDealt[0] = 0;
mDamageDealt[1] = 0;
mDamageDealt[2] = 0;
mDamageDealt[3] = 0;
globalvar mDamagePercentage;
mDamagePercentage[0] = 0;
mDamagePercentage[1] = 0;
mDamagePercentage[2] = 0;
mDamagePercentage[3] = 0;


//values that will be saved
globalvar mGold;
mGold[0] = 0;
mGold[1] = 0;
mGold[2] = 0;
mGold[3] = 0;
globalvar mArrowDamage;
mArrowDamage[0] = 1;
mArrowDamage[1] = 1;
mArrowDamage[2] = 1;
mArrowDamage[3] = 1;
globalvar mBowSpeed;
mBowSpeed[0] = baseBowSpeed;
mBowSpeed[1] = baseBowSpeed;
mBowSpeed[2] = baseBowSpeed;
mBowSpeed[3] = baseBowSpeed;
globalvar mMultiShot;
mMultiShot[0] = 1;
mMultiShot[1] = 1;
mMultiShot[2] = 1;
mMultiShot[3] = 1;
globalvar mFireMult;
mFireMult[0] = .5;
mFireMult[1] = .5;
mFireMult[2] = .5;
mFireMult[3] = .5;
globalvar mFrostMult;
mFrostMult[0] = .5;
mFrostMult[1] = .5;
mFrostMult[2] = .5;
mFrostMult[3] = .5;
globalvar mLightningMult;
mLightningMult[0] = .5;
mLightningMult[1] = .5;
mLightningMult[2] = .5;
mLightningMult[3] = .5;



/////////////////////////////////////////

///////////////Audio Channels//////////////////

switch (os_browser)
{
    case browser_not_a_browser:
        switch (os_type)
        {
        case os_windows:
        case os_macosx:
            audio_channel_num(200);
            break;
        default:
            audio_channel_num(64);
            break;
        }
      break;
    default:
      audio_channel_num(16);
      break;
}

///////////////AUDIO GAIN//////////////////////

//BowFiring
audio_sound_gain(sndBowFire,.1,0);

//ArrowFlying
audio_sound_gain(sndFlyingArrow,.05,0);
//audio_sound_gain(sndFlyingArrow,0,300);

//ArrowSnap
audio_sound_gain(sndArrowSnap,.025,0);

//ElectricShock
audio_sound_gain(sndShock,.02,0);

//CoinFlying
audio_sound_gain(sndCoin,.1,0);

//SoldierDeath
audio_sound_gain(sndSoldierDeath1,.1,0);
audio_sound_gain(sndSoldierDeath2,.1,0);

//TrollDeath
audio_sound_gain(sndTrollDeath1,.2,0);
audio_sound_gain(sndTrollDeath2,.2,0);

//TrollBoulder
audio_sound_gain(sndBoulder,.15,0);

//HeadSquish
audio_sound_gain(sndHeadSquish1,.5,0);
audio_sound_gain(sndHeadSquish2,.5,0);
audio_sound_gain(sndHeadSquish3,.5,0);

//PeasandPickupCheer
audio_sound_gain(sndPeasantPickup,.1,0);
 
//DragonSpawn
audio_sound_gain(sndDragonSpawn, .1,0);

//DragonDeath
audio_sound_gain(sndDragonDeath, .1,0);

//DragonBreath
audio_sound_gain(sndDragonBreath, .25,0);

//ShieldBurn
audio_sound_gain(sndShieldBurn, .25,0);

//Steam
audio_sound_gain(sndSteam, .02, 0);

//Music
audio_sound_gain(sndBattlefieldSong, .2, 0);
audio_sound_gain(sndSnowSong, .2, 0);
/////////////////////////////////////////////////


///////////////PARTICLE CREATION//////////////////////

////Particle System
globalvar parts;
parts = part_system_create();

//partSteam
globalvar partSteam;
partSteam = part_type_create();
part_type_shape(partSteam, pt_shape_cloud);
part_type_size(partSteam, .5, .5,.01,.001);
part_type_direction(partSteam,88,92,0,2);
part_type_speed(partSteam,1,1,.02,.005);
part_type_alpha2(partSteam,.8,0);
part_type_life(partSteam,120,140);

//partSmoke
globalvar partSmoke;
partSmoke = part_type_create();
part_type_shape(partSmoke, pt_shape_cloud);
part_type_size(partSmoke, .5, .5,.01,.001);
part_type_color2(partSmoke, c_black, c_gray);
part_type_direction(partSmoke,88,92,0,2);
part_type_speed(partSmoke,.75,1,.02,.01);
part_type_alpha2(partSmoke,.8,0);
part_type_life(partSmoke,120,140);

//partHeal
globalvar partHeal;
partHeal = part_type_create();
part_type_sprite(partHeal, sprHealEffect,false,false,false);
part_type_size(partHeal,.1,.4,-.01,-.001);
part_type_direction(partHeal,88,92,0,2);
part_type_speed(partHeal,.25,5,0,.01);
part_type_alpha2(partHeal,1,0);
part_type_life(partHeal,30,45);

/////////////////////////////////////////////////

////////////////////Palette Control////////////////

//Initializes the palette swapper system
pal_swap_init_system(shd_pal_swapper);

globalvar footPalIndex, trollPalIndex, magePalIndex, dragonPalIndex, snowManPalIndex, icePalIndex, zeusPalIndex;

footPalIndex = 0;
trollPalIndex = 0;
magePalIndex = 0;
dragonPalIndex = 0;
snowManPalIndex = 0;
icePalIndex = 0;
zeusPalIndex = 0;

////////////////////////////////////////////////////

display_set_gui_size(room_width,room_height);

instance_create(0,0,objFullScreenControl);

room_goto(rmSplash);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
