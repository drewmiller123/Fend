<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
depth = -500;
mDamageTotal = mDamageDealt[0]+mDamageDealt[1]+mDamageDealt[2]+mDamageDealt[3];

mDamagePercentage[0] = (mDamageDealt[0]/mDamageTotal);
mDamagePercentage[1] = (mDamageDealt[1]/mDamageTotal);
mDamagePercentage[2] = (mDamageDealt[2]/mDamageTotal);
mDamagePercentage[3] = (mDamageDealt[3]/mDamageTotal);

damageScale = max(mDamagePercentage[0], mDamagePercentage[1], mDamagePercentage[2], mDamagePercentage[3]);

for(c = 0; c&lt;= objServer.numClients; c++)
{
    mNewGold[c] = round(multiplayerGold*.9/(objServer.numClients+1) + mDamagePercentage[c]*multiplayerGold*.1);
}

/*mNewGold[0] = round(multiplayerGold*.9/(objServer.numClients+1) + mDamagePercentage[0]*multiplayerGold*.1);
mNewGold[1] = round(multiplayerGold*.9/(objServer.numClients+1) + mDamagePercentage[1]*multiplayerGold*.1);
mNewGold[2] = round(multiplayerGold*.9/(objServer.numClients+1) + mDamagePercentage[2]*multiplayerGold*.1);
mNewGold[3] = round(multiplayerGold*.9/(objServer.numClients+1) + mDamagePercentage[3]*multiplayerGold*.1);*/



with(objArrowSelectorParent)
{
    instance_destroy();
}



//dim background
blackout = instance_create(0,0,objBlack);

report = instance_create(view_wview[0]/2,view_hview[0]/2 - sprite_get_height(sprCarnageReport)/16,objCarnageReport);
main = instance_create(x - sprite_get_width(sprMenuButton) * 1.5,view_hview[0] - sprite_get_height(sprMenuButton),objMainMenuButton);
cont = instance_create(x + sprite_get_width(sprMenuButton) * 1.5,view_hview[0] - sprite_get_height(sprMenuButton),objCarnageContinue);




var cx = objCarnageReport.x - objCarnageReport.sprite_width/2;
var cshift = objCarnageReport.sprite_width/6;
mDamageDisplay[0] = instance_create(cx + 2*cshift, view_hview[0]/2, objDamagePercentage);
if(objServer.numClients &gt;= 1)
{
    mDamageDisplay[1] = instance_create(cx + 3*cshift, view_hview[0]/2, objDamagePercentage);
}
if(objServer.numClients &gt;= 2)
{
    mDamageDisplay[2] = instance_create(cx + 4*cshift, view_hview[0]/2, objDamagePercentage);
}
if(objServer.numClients &gt;= 3)
{
    mDamageDisplay[3] = instance_create(cx + 5*cshift, view_hview[0]/2, objDamagePercentage);
}

//
for(i = 0; i &lt;= objServer.numClients; i++)
{
    mDamageDisplay[i].image_yscale = mDamagePercentage[i]/damageScale;
}
//

with(objServer)
{
    var count = ds_list_size(socketList);
    if(count &gt; 0)
    {
        //roomString = string(room == rmLobby);
          
        
        for(i=0;i&lt;count;i++)
        {   
    
            var sock = ds_list_find_value(socketList,i);
            var ip = ds_list_find_value(ipList,i);
            var port = ds_list_find_value(portList,i);
            
            buffer_seek(buffer, buffer_seek_start, 0);
            buffer_write(buffer, buffer_u8, netStatUpdate);
            //buffer_write(buffer, buffer_bool, false);
            buffer_write(buffer, buffer_u32, mNewGold[i+1]); 
    
            network_send_udp(sock, ip, port, buffer, buffer_tell(buffer));   
       
        }
    }
}
scrSendCarnageUpdate();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
