<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprShield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objNetDrawParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_speed = .2;
//image_speed = 0;
//speed = baseEnemySpeed/2;

//maxHP = 5;
//HP = maxHP;

//drawHP = true;

//burning = false;
//burnTimer = 0;
//fire = noone;
owner = noone;
//palette_index = 0;


//damaging = false;
//attackReset = false;

//y-=sprite_height/2;

//roll = TweenNull();
//pulse = TweenNull();

//roll = TweenCreate(self, image_angle__,EaseOutQuad,TWEEN_MODE_ONCE,false,0,60,0,360);
//pulse = TweenCreate(self, x__,EaseOutQuad,TWEEN_MODE_ONCE,false,0,60,x,x-60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with(fire)
{
    instance_destroy();
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(HP &lt;= 0)
{
    instance_destroy();
}

if(burning)
{
    if(instance_exists(fire))
    {
        fire.x = x;
        fire.y = y-20;
    }
    burnTimer--;
    if(burnTimer mod 30 == 0)
    {
        HP -= arrowDamage*fireDamageMult/(burnDuration/30);
    }
    if(burnTimer == 0)
    {
        burning = false;
        with(fire)
        {
            instance_destroy();
        }
    }
}
else
{
    with(fire)
    {
        instance_destroy();
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrostFireLightningArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var burntShield = instance_create(x,y,objShieldBurnUp);
burntShield.speed = owner.speed;
burntShield.depth = depth;
burntShield.paletteIndex = 1;
burntShield.paletteIndex = 1;
burntShield.owner = owner;
owner.shield = burntShield;


instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLightningArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    var inst = instance_create(x,y,objBrokenArrow);
    inst.sprite_index = sprBrokenLightningArrow;
    inst.image_speed = .25;
    //inst.direction = point_direction(other.x,other.y,x,y);
    //inst.speed = speed * dot_product_normalised(speed * -cos(direction*pi/180),speed * sin(direction*pi/180),other.x - x, other.y - y);
    var hspd = speed * cos(direction*pi/180)
    var vspd = speed * -sin(direction*pi/180)
    var tangent = 180 - point_direction(other.x,other.y,x,y);
    inst.hspeed = (-.25 + random(.1))*hspd*cos(tangent*pi/180);
    inst.vspeed = (-.25 + random(.1))*vspd*sin(tangent*pi/180);
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objIceArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    var inst = instance_create(x,y,objBrokenArrow);
    inst.sprite_index = sprBrokenIceArrow;
    //inst.direction = point_direction(other.x,other.y,x,y);
    //inst.speed = speed * dot_product_normalised(speed * -cos(direction*pi/180),speed * sin(direction*pi/180),other.x - x, other.y - y);
    var hspd = speed * cos(direction*pi/180)
    var vspd = speed * -sin(direction*pi/180)
    var tangent = 180 - point_direction(other.x,other.y,x,y);
    inst.hspeed = (-.25 + random(.1))*hspd*cos(tangent*pi/180);
    inst.vspeed = (-.25 + random(.1))*vspd*sin(tangent*pi/180);
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrostFireArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_collision, objFireArrow);
owner.shield.paletteIndex = 1;

with(other)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFireArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*burning = true;
burnTimer = burnDuration;
if(!instance_exists(fire))
{
    fire = instance_create(x,y-20,objFireEffect);
    fire.depth = -11;
}
with(other)
{
    instance_destroy();
}*/
var burntShield = instance_create(x,y,objShieldBurnUp);
burntShield.speed = owner.speed;
burntShield.depth = depth;
burntShield.owner = owner;
owner.shield = burntShield;

with(other)
{
    instance_destroy();
}

instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    var inst = instance_create(x,y,objBrokenArrow);
    //inst.direction = point_direction(other.x,other.y,x,y);
    //inst.speed = speed * dot_product_normalised(speed * -cos(direction*pi/180),speed * sin(direction*pi/180),other.x - x, other.y - y);
    var hspd = speed * cos(direction*pi/180)
    var vspd = speed * -sin(direction*pi/180)
    var tangent = 180 - point_direction(other.x,other.y,x,y);
    inst.hspeed = (-.25 + random(.1))*hspd*cos(tangent*pi/180);
    inst.vspeed = (-.25 + random(.1))*vspd*sin(tangent*pi/180);
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(HP &lt; maxHP &amp;&amp; drawHP)
{
    draw_healthbar(x-sprite_width/4,y-32,x+sprite_width/4,y-28,HP/maxHP*100,c_black,c_gray,c_gray,0,true,true);
}*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
