<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCloudMinion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemyParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(endlessMode)
{
    maxHP = 20 * power(endlessHPScaling,(day - 1) div 10);
    worth = floor(5 * power(endlessGoldScaling,(day - 1) div 10));
}
else
{
    maxHP = 30 * power(HPScaling,(day - 1) div 10);
    worth = 0 * power(goldScaling,(day - 1) div 10);
}


HP = maxHP
//speed = baseEnemySpeed;
image_speed = 0;
spawnState = true;
spawnPointx = x;
spawnPointy = y;
midPointy = ((988-sprite_height)+y)/2;
radius = 988-sprite_height - midPointy;
wigglePoint = 988-sprite_height;
movementAngle = 90;
//image_index = irandom(image_number-1);
image_speed = 0;
attackDamage = 1;
attacking = false;

burning = false;
burnTimer = 0;
fire = noone;
cloudDark = instance_create(x,y,objCloudMinionDark);
wiggle = 0;
zap = false;
zapCount = 0;
tween = 0;
depth = -1;
//squished = false;

hpBar = instance_create(x, y+sprite_height/2 + 8, objHPBar);
hpBar.owner = id;
hpBar.image_xscale = sprite_width/2 / hpBar.sprite_width;
hpBar.image_yscale = 6 / hpBar.sprite_height;

firePlayer = 0;
lightningPlayer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TweenDestroySafe(tween);
with(cloudDark)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(!instance_exists(objGate))
{
    attacking = false;
}


if(spawnState)
{
    oldx = x;
    oldy = y;
    
    if(x &lt; view_wview[0]*7/8)
    {
        speed = -baseEnemySpeed*3;
    }
    else
    {
        //spawnState = false;
        speed = 0;
        if(y &lt; 988 - sprite_height)
        {
            x = view_wview[0]*7/8 + cos(movementAngle*pi/180)*radius;
            y = midPointy - sin(movementAngle*pi/180)*radius;
            movementAngle -= 2;
            //image_angle = movementAngle - 90;
        }
        else
        {
            spawnState = false;
            y = 988 - sprite_height;
            direction = 0;
            speed = baseEnemySpeed*3;
            if(instance_exists(cloudDark))
            {
                tween = TweenFire(id,y__,EaseInOutQuad,TWEEN_MODE_PATROL,false,0,60+irandom(15),wigglePoint,wigglePoint-10);//This was causing errors when it was executing the same frame as death
            }
        }
    }
    if(movementAngle &gt;= 0 &amp;&amp; movementAngle &lt;= 90)
    {
        image_xscale = -1;
        image_angle = movementAngle - 90
    }
    else
    {
        image_xscale = 1;
        image_angle = movementAngle + 90;
    }
}
else if(attacking &amp;&amp; instance_exists(cloudDark))
{
    sprite_index = sprCloudMinionAttack;
    speed = 0;
    cloudDark.image_alpha += .005;
    x = attackPointx - wiggle/2 + irandom(wiggle)
    y = attackPointy - wiggle/2 + irandom(wiggle)
    wiggle += .1;
    if(cloudDark.image_alpha &gt;= .5)
    {
        cloudDark.image_alpha = 0;
        //lightningSpawned = true;
        //bolt = instance_create(cloud.x,cloud.y,objZeusLightning);
        //bolt.vspeed = - 10;
        //bolt.gravity = grav;
        zap = true;
        audio_play_sound(sndShock,0,false);
        objGate.HP -= attackDamage;
        x = attackPointx;
        y = attackPointy;
        wiggle = 0;
    }
    /*if(y &lt; 988 - sprite_height)
    {
        x = view_wview[0]*7/8 + cos(movementAngle*pi/180)*radius;
        y = midPointy - sin(movementAngle*pi/180)*radius;
        movementAngle -= 2;
        //image_angle = movementAngle - 90;
    }
    else
    {
        y = 988 - sprite_height;
        direction = 0;
        speed = baseEnemySpeed*3;
    }*/
}
else
{
    if(instance_exists(cloudDark))
    {
        cloudDark.image_alpha = 0;
    }
    wiggle = 0;
    sprite_index = sprCloudMinion;
    speed = baseEnemySpeed*3;
}

if(HP&gt;maxHP*.75)
{
    image_index = 0;
}
else if(HP &gt;= maxHP/2)
{
    image_index = 1;
}
else if(HP &gt;= maxHP/4)
{
    image_index = 2;
}
else
{
    image_index = 3;
}
//image_angle = direction;
/*if(!instance_exists(objGate))
{
    sprite_index = sprIceGiantWalk;
    speed = baseEnemySpeed;
}*/
if(instance_exists(cloudDark))
{
    cloudDark.x = x;
    cloudDark.y = y;
}

if(instance_exists(hpBar))
{
    hpBar.x = x;
    hpBar.y = y + sprite_height/2 + 8;
}

if(HP &lt;= 0)
{
    var inst = instance_create(x,y,objCloudMinionDead);

    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrostFireLightningArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var inst = instance_create(x,y,objLightningArc);
inst.currentEnemy = id;
if(hosting)
{
    lightningPlayer = other.player;
    inst.player = lightningPlayer;
}
with(inst)
{
    event_perform(ev_other,ev_user0);
}

with(other)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLightningArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HP -= arrowDamage;
/*x += 1;
burning = true;
burnTimer = burnDuration;
if(!instance_exists(fire))
{
    fire = instance_create(x,y,objFireEffect);
}*/
/*var inst = instance_create(x,y,objLightningArc);
inst.currentEnemy = id;
with(inst)
{
    event_perform(ev_other,ev_user0);
}

with(other)
{
    instance_destroy();
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objIceArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hosting)
{
    var dam = (mArrowDamage[other.player]/2 + mArrowDamage[other.player]*mFrostMult[other.player]);
    HP -= dam;
    mDamageTotal += dam;
    mDamageDealt[other.player] += dam;
}
else
{
    HP -= (arrowDamage/2 + arrowDamage*frostDamageMult);
}
with(other)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrostFireArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform(ev_collision, objFireArrow);
event_perform(ev_collision, objIceArrow);
with(other)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFireArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//HP -= (arrowDamage/2+arrowDamage*fireDamageMult);
/*x += 1;
burning = true;
burnTimer = burnDuration;
if(!instance_exists(fire))
{
    fire = instance_create(x,y,objFireEffect);
}*/
//with(other)
//{
//    instance_destroy();
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with(other)
{
    instance_create(x,y,objBrokenArrow);
    instance_destroy();
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objGate">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var damage = HP;

if(!attacking)
{
    attackPointx = x;
    attackPointy = y;
}
attacking = true;


//with(other)
//{
//    HP -= damage;
//}

//instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///takes no damage from lightning
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform(ev_collision, objFireArrow);
event_perform(ev_collision, objIceArrow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(HP &lt; maxHP)
{
    draw_healthbar(x-sprite_width/4,y+sprite_height/2+4,x+sprite_width/4,y+sprite_height/2+8,HP/maxHP*100,c_black,c_red,c_red,0,true,true);
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(burning)
//{
    //shader_set(shdBurn);
    //draw_self();
//    shader_reset();
    //draw_sprite_ext(sprFootSoldierEffectMask,image_index,x,y,1,1,0,c_red,.5);
//}
//else
//{
    draw_self()
    if(instance_exists(cloudDark))
    {
        with(cloudDark)
        {
            draw_self();
        }
    }
    if(zap)
    {
        draw_sprite_ext(sprLightningArc,zapCount mod 6,x,y,sprite_width*3/4/sprite_get_width(sprLightningArc),1,202,c_white,1);
        zapCount++;
        if(zapCount &gt;= 10)
        {
            zap = false;
        }
    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
