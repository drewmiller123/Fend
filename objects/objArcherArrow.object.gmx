<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprUpgradeArrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>displayStats = false;
image_speed = 0;
costColor = c_yellow;
baseCost = 10;
cost = baseCost*power(10,numArchers);

coin = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(position_meeting(mouse_x,mouse_y,self) &amp;&amp; numArchers != 3)
{
    displayStats = true;
}
else
{
    displayStats = false;
}

if(gold &lt; cost)
{
    image_index = 1;
}
else
{
    image_index = 0;
}
if(numArchers == 3)
{
    visible = false;
}
else
{
    visible = true;
}

if(displayStats)
{
    if(!instance_exists(coin))
    {
        coin = instance_create(0,0,objDisplayCoin);
    }
}
else
{
    with(coin)
    {
        instance_destroy();
    }
}
//cost = baseCost*power(10,multiShot);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(numArchers &lt; 3 &amp;&amp; gold &gt;= cost)
{
    gold -= cost;
    numArchers++;
    cost = baseCost*power(10,numArchers);
}
//else if(multiShot &lt; 2)
//{
//    var nope = instance_create(x,y,objNope);
//    nope.depth = -1;
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_font(fntMultiUpgrade);
draw_set_halign(fa_left);
scrDrawTextOutline("Multi#Shot",64,y-sprite_height/2+sprite_height/16,c_white,c_black)*/

if(cost &gt; gold)
{
    costColor = c_red;
}
else
{
    costColor = c_yellow;
}

if(displayStats)
{
    draw_set_font(fntMultiUpgrade);
    
    draw_set_halign(fa_right);
    scrDrawTextOutline(string(cost),view_wview[0]/2 + sprite_get_width(sprInfoTextBox)/2 - 10,objInfoTextBox.y + 10,costColor,c_black);
    if(instance_exists(coin))
    {
        coin.x = view_wview[0]/2 + sprite_get_width(sprInfoTextBox)/2 - 20 - coin.sprite_width/2 - string_width(string(cost));
        coin.y = objInfoTextBox.y + coin.sprite_width/2 + 8;// 46;
    }
    scrDrawTextOutline("Cost: ",view_wview[0]/2 + sprite_get_width(sprInfoTextBox)/2 - 30 - sprite_get_width(sprBigCoin) - string_width(string(cost)),objInfoTextBox.y + 10,costColor,c_black);
    draw_set_halign(fa_left);
    scrDrawTextOutline("##Increases#number of#archers to "+string(numArchers+1),objInfoTextBox.x + 10,objInfoTextBox.y + 10,c_white,c_black)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
