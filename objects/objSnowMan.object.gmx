<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSnowManJump</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemyParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(endlessMode)
{
    maxHP = 250 * power(endlessHPScaling,(day - 1) div 10);
    worth = floor(50 * power(endlessGoldScaling,(day - 1) div 10));
}
else
{
    maxHP = 400 * power(HPScaling,(day - 1) div 10);
    worth = 100 * power(goldScaling,(day - 1) div 10);
}


HP = maxHP;
speed = baseEnemySpeed;
image_index = irandom(20);
image_speed = 1;
attackDamage = 3;
attackReset = false;

moving = true;
attacking = false;
damaging = false;
cooldown = 180;
snowBallSpeed = arrowSpeed;


//squished = false;

hpBar = instance_create(x, y+sprite_height/2 + 8, objHPBar);
hpBar.owner = id;
hpBar.image_xscale = sprite_width/2 / hpBar.sprite_width;
hpBar.image_yscale = 6 / hpBar.sprite_height;

firePlayer = 0;
lightningPlayer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gold += worth;
scrCoinSplosion();

//Add to carnage report
event_perform(ev_other,ev_user10);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(HP &lt;= 0)
{
    //var inst = instance_create(x,y,objFootSoldierDead);
    //inst.squished = squished;
    //var snd = choose(sndSoldierDeath1, sndSoldierDeath2);
    //audio_play_sound(snd, 0, false);
    attacking = false;
    damaging = false;
    moving = false;
    //instance_destroy();
}

if(!instance_exists(objGate))
{
    //sprite_index = sprFootSoldier;
    //speed = baseEnemySpeed;
    damaging = false;
    attacking = false;
    moving = true;
}
else
{
    if(x + hspeed - sprite_width/2 &lt;= objGate.x)
    {
        hspeed = 0;
        moving = false;
        attacking = false;
        damaging = true;
    }
}



if(moving)
{
    if(sprite_index != sprSnowManJump)
    {
        sprite_index = sprSnowManJump;
        image_index = 0;
    }
    if(image_index == 21)
    {
        //gravity = grav;
        vspeed = -5;
    }
    if(image_index &gt;= 21 &amp;&amp; image_index &lt; 61)// &amp;&amp; image_index &gt;=
    {
        hspeed = baseEnemySpeed*2;
        vspeed += grav;
    }
    else if(image_index == 61)
    {
        image_speed = 0;
    }
    if(y+vspeed+sprite_height/2&gt;=988)
    {
        //gravity = 0;
        y = 988-sprite_height/2;
        speed = 0;
        //image_index = 0;
        image_speed = 1;
        if(cooldown &lt;= 0)
        {
            attacking = true;
            moving = false;
        }
    }
}
else if(attacking)
{    
    if(speed != 0)
    {
        if(y+vspeed+sprite_height/2&lt;988)
        {
            vspeed += grav;
        }
        if(y+vspeed+sprite_height/2&gt;=988)
        {
            //gravity = 0;
            y = 988-sprite_height/2;
            speed = 0;
        }
    }
    else
    {
        if(sprite_index != sprSnowManThrow)
        {
            sprite_index = sprSnowManThrow;
        }
        if(image_index == 63)
        {
            //if(!damaging)
            //{
                var ball = instance_create(x,y,objSnowBall);
                ball.direction = 180 - scrGetLaunchAngle(objArcherParent.x,y,x,objArcherParent.y,snowBallSpeed,grav);
                ball.speed = snowBallSpeed;
            //}
            //else
            //{
                //objGate.HP -= attackDamage;
            //}
        }
        if(image_index == image_number - 1)
        {
            attacking = false;
            damaging = false;
            moving = true;
            cooldown = 180;
        }
    }
}
else if(damaging)
{
    if(speed != 0)
    {
        if(y+vspeed+sprite_height/2&lt;988)
        {
            vspeed += grav;
        }
        else//if(y+vspeed+sprite_height/2&gt;=988)
        {
            //gravity = 0;
            y = 988-sprite_height/2;
            speed = 0;
        }
    }
    else
    {
        if(sprite_index != sprSnowManPunch)
        {
            sprite_index = sprSnowManPunch;
        }
        if(image_index == 25)
        {
            objGate.HP -= attackDamage;
        }
    }
}
else
{
    if(speed != 0)
    {
        if(y+vspeed+sprite_height/2&lt;988)
        {
            vspeed += grav;
        }
        if(y+vspeed+sprite_height/2&gt;=988)
        {
            //gravity = 0;
            y = 988-sprite_height/2;
            speed = 0;
        }
    }
    else
    {
        instance_create(x,y,objSnowManDead);
        instance_destroy();
    }
}

cooldown--;

if(HP &lt;= 0)
{
    if(speed == 0)
    {
        instance_create(x,y,objSnowManDead);
        instance_destroy();
    }
}


if(instance_exists(hpBar))
{
    hpBar.x = x;
    hpBar.y = y + sprite_height/2 + 8;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrostFireLightningArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var inst = instance_create(x,y,objLightningArc);
inst.currentEnemy = id;
if(hosting)
{
    lightningPlayer = other.player;
    inst.player = lightningPlayer;
}
with(inst)
{
    event_perform(ev_other,ev_user0);
}

with(other)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLightningArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HP -= arrowDamage;
/*x += 1;
burning = true;
burnTimer = burnDuration;
if(!instance_exists(fire))
{
    fire = instance_create(x,y,objFireEffect);
}*/
var inst = instance_create(x,y,objLightningArc);
inst.currentEnemy = id;
if(hosting)
{
    lightningPlayer = other.player;
    inst.player = lightningPlayer;
}
with(inst)
{
    event_perform(ev_other,ev_user0);
}

with(other)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objIceArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrostFireArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_collision, objFireArrow);
//event_perform(ev_collision, objIceArrow);
with(other)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFireArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hosting)
{
    var dam = mArrowDamage[other.player]/2 + mArrowDamage[other.player]*mFireMult[other.player];
    HP -= dam;
    mDamageTotal += dam;
    mDamageDealt[other.player] += dam;
    firePlayer = other.player;
}
else
{
    HP -= (arrowDamage/2+arrowDamage*fireDamageMult);
}

/*x += 1;
burning = true;
burnTimer = burnDuration;
if(!instance_exists(fire))
{
    fire = instance_create(x,y,objFireEffect);
}*/

//part_particles_create(parts,x,y,partSteam,1);
scrCreateParticles(x,y,partSteam,1);
if(audio_is_playing(sndSteam))
{
    audio_sound_set_track_position(sndSteam,.2);
    //audio_play_sound(sndSteam,0,false);
    scrPlayAudio(sndSteam);
}
else
{
    audio_sound_set_track_position(sndSteam,0);
    //audio_play_sound(sndSteam,0,false);
    scrPlayAudio(sndSteam);
}

with(other)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with(other)
{
    
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objGate">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hspeed = 0;
//moving = false;
//attacking = false;
//damaging = true;
//sprite_index = sprFootSoldierAttack;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit by frostFireLightning Arc
if(hosting)
{
    var dam = mArrowDamage[lightningPlayer]*mLightningMult[lightningPlayer];
    HP -= dam;
    mDamageTotal += dam;
    mDamageDealt[lightningPlayer] += dam;    
    firePlayer = lightningPlayer;
}
else
{
    HP -= arrowDamage*lightningDamageMult;
}
event_perform(ev_collision, objFireArrow);
//fire.paletteIndex = 1;
//event_perform(ev_collision, objIceArrow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(HP &lt; maxHP)
{
    draw_healthbar(x-sprite_get_width(sprSnowManJump)/4,y+sprite_get_height(sprSnowManJump)/2+4,x+sprite_get_width(sprSnowManJump)/4,y+sprite_get_height(sprSnowManJump)/2+8,HP/maxHP*100,c_black,c_red,c_red,0,true,true);
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(burning)
//{
    //shader_set(shdBurn);
    //draw_self();
//    shader_reset();
    //draw_sprite_ext(sprFootSoldierEffectMask,image_index,x,y,1,1,0,c_red,.5);
//}
//else
//{
pal_swap_set(sprSnowManPal,snowManPalIndex,false);
    draw_self()
pal_swap_reset();
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
